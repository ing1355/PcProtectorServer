<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.process.mapper.ProcessMapper">

    <select id="selectProcessList"
            resultType="oms.pc_protector.restApi.process.model.ProcessVO" parameterType="String">
        SELECT *
        FROM process
        WHERE type = #{processType}
          AND department_idx = #{departmentIdx}
    </select>

    <select id="selectProcessAll" resultType="oms.pc_protector.restApi.process.model.ProcessVO">
        SELECT *
        FROM process
        WHERE type = 'none'
          AND department_idx = #{departmentIdx}
    </select>

    <select id="searchProcess" parameterType="String"
            resultType="oms.pc_protector.restApi.process.model.ProcessVO">
        SELECT *
        FROM process
        WHERE type = 'none'
        <if test='displayName != null and displayName != ""'>
            AND display_name LIKE CONCAT('%',#{displayName},'%')
        </if>
        <if test='registryName != null and registryName != ""'>
            AND registry_item LIKE CONCAT('%',#{registryName},'%')
        </if>
        AND department_idx = #{departmentIdx}
    </select>

    <select id="existProcess" parameterType="oms.pc_protector.restApi.process.model.ProcessVO"
            resultType="oms.pc_protector.restApi.process.model.ProcessVO">
        SELECT *
        FROM process
        WHERE display_name = #{displayName}
          AND registry_item = #{registryItem}
          AND department_idx = #{departmentIdx}
    </select>

    <insert id="insertProcess" parameterType="oms.pc_protector.restApi.process.model.ProcessVO">
        INSERT INTO process (registry_item, display_name, department_idx)
        SELECT #{registryItem},
               #{displayName},
               #{departmentIdx}
        FROM DUAL
        WHERE NOT EXISTS(SELECT *
                         FROM process
                         WHERE registry_item = #{registryItem}
                           AND display_name = #{displayName}
                           AND department_idx = #{departmentIdx});

    </insert>

    <insert id="insertUnApprovedProcess" parameterType="oms.pc_protector.restApi.process.model.ProcessVO">
        INSERT INTO process (type, registry_item, display_name, department_idx)
        SELECT 'unApproved',
               #{registryItem},
               #{displayName},
               #{departmentIdx}
        FROM DUAL
        WHERE NOT EXISTS(SELECT * FROM process
        WHERE registry_item = #{registryItem} AND display_name = #{displayName} AND department_idx = #{departmentIdx})
    </insert>

    <insert id="insertRequiredProcess" parameterType="oms.pc_protector.restApi.process.model.ProcessVO">
        INSERT INTO process (type, registry_item, display_name, department_idx)
        SELECT 'required',
               #{registryItem},
               #{displayName},
               #{departmentIdx}
        FROM DUAL
        WHERE NOT EXISTS(SELECT * FROM process
        WHERE registry_item = #{registryItem} AND display_name = #{displayName} AND department_idx = #{departmentIdx})
    </insert>


    <update id="processUpdate" parameterType="oms.pc_protector.restApi.process.model.ProcessVO">
        UPDATE process
        SET type        = 'none',
            update_time = now()
        WHERE idx = #{idx}
    </update>

    <update id="modifyToRequiredProcess" parameterType="Long">
        UPDATE process
        SET update_time = now(),
            type        = 'required'
        WHERE idx = #{value}
    </update>

    <update id="modifyToUnApprovedProcess" parameterType="Long">
        UPDATE process
        SET update_time = now(),
            type        = 'unApproved'
        WHERE idx = #{value}
    </update>

    <delete id="processDelete" parameterType="oms.pc_protector.restApi.process.model.ProcessVO">
        DELETE
        FROM process
        WHERE display_name = #{displayName}
          AND registry_item = #{registryItem}
          AND department_idx = #{departmentIdx}
    </delete>


</mapper>


