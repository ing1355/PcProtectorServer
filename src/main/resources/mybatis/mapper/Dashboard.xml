<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.dashboard.mapper.DashboardMapper">

    <select id="selectAvgScoreByMonth" resultType="Integer">
        SELECT NVL(AVG(u.score), 0)
        FROM (
                 (SELECT u.ip_address,
                         u.user_id,
                         u.score,
                         u.check_time,
                         u.item1_result,
                         u.item2_result,
                         u.item3_result,
                         u.item4_result,
                         u.item5_result,
                         u.item6_result,
                         u.item7_result,
                         u.item8_result,
                         u.item9_result,
                         u.item10_result,
                         u.item11_result,
                         u.item12_result,
                         u.item13_result,
                         u.item14_result,
                         u.item15_result,
                         u.item16_result,
                         u.department_idx
                  FROM user_result u,
                       client c, user user
                  WHERE u.user_id = c.user_id
                    AND user.user_id = c.user_id
                    AND user.department_idx = c.department_idx
                    AND u.department_idx = c.department_idx
                    AND u.ip_address = c.ip_address
                    AND u.in_schedule = 1) u
                     JOIN
                     (SELECT start_date, end_date FROM dashboard_period WHERE department_idx = '144') da
                     ON DATE_FORMAT(u.check_time, '%Y-%m-%d %T') BETWEEN da.start_date AND da.end_date),
             (SELECT b.idx
              FROM department a
                       JOIN department b
                            ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE u.department_idx = d.idx
          AND (u.item1_result +
               u.item2_result +
               u.item3_result +
               u.item4_result +
               u.item5_result +
               u.item6_result +
               u.item7_result +
               u.item8_result +
               u.item9_result +
               u.item10_result +
               u.item11_result +
               u.item12_result +
               u.item13_result +
               u.item14_result +
               u.item15_result +
               u.item16_result) > 0;
    </select>

    <select id="selectClientCount" resultType="Integer">
        SELECT COUNT(c.user_id)
        FROM client c,
             user u,
             (SELECT b.idx
              FROM department a
                       JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE c.user_id = u.user_id
          AND c.department_idx = u.department_idx
          AND c.department_idx IN (d.idx)
    </select>

    <select id="selectAvgScoreByRecentMonths"
            resultType="Integer"
            parameterType="String">
        SELECT NVL(AVG(t2.score), 0)
        FROM (SELECT c.user_id, c.ip_address
              FROM user u,
                   client c,
                   (SELECT b.idx
                    FROM department a
                             JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
              WHERE u.user_id = c.user_id
                AND c.department_idx = d.idx) AS t1
                 LEFT OUTER JOIN
             (SELECT *,
                     ROW_NUMBER() over (PARTITION BY user_id ORDER BY check_time DESC) AS r0
              FROM user_result
              WHERE DATE_FORMAT(check_time, '%Y-%m') = #{month}
                AND in_schedule = 1
                AND (item1_result +
                     item2_result +
                     item3_result +
                     item4_result +
                     item5_result +
                     item6_result +
                     item7_result +
                     item8_result +
                     item9_result +
                     item10_result +
                     item11_result +
                     item12_result +
                     item13_result +
                     item14_result +
                     item15_result +
                     item16_result) > 0) AS t2 ON t1.user_id = t2.user_id
        WHERE t2.r0 = 1
    </select>

    <select id="selectUserCountByScore" resultType="Integer">
        SELECT COUNT(*)
        FROM (SELECT start_date, end_date FROM dashboard_period WHERE department_idx = #{departmentIdx}) da,
             user_result t1,
             (SELECT c.user_id, user.department_idx, c.ip_address
              FROM client c,
                   user user,
                   (SELECT b.idx
                    FROM department a
                             JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
              WHERE c.user_id = user.user_id
                AND c.department_idx = d.idx) c
        WHERE c.user_id = t1.user_id
          AND c.ip_address = t1.ip_address
          AND t1.in_schedule = 1
          AND c.department_idx = t1.department_idx
          AND DATE_FORMAT(t1.check_time, '%Y-%m-%d %T') BETWEEN da.start_date AND da.end_date
          AND score BETWEEN #{startScore} AND #{endScore}
          AND (t1.item1_result +
               t1.item2_result +
               t1.item3_result +
               t1.item4_result +
               t1.item5_result +
               t1.item6_result +
               t1.item7_result +
               t1.item8_result +
               t1.item9_result +
               t1.item10_result +
               t1.item11_result +
               t1.item12_result +
               t1.item13_result +
               t1.item14_result +
               t1.item15_result +
               t1.item16_result) > 0
    </select>

    <select id="selectAllDashboardPeriod" resultType="oms.pc_protector.restApi.dashboard.model.DashboardPeriodVO">
        SELECT *
        FROM dashboard_period;
    </select>

    <select id="selectDashboardPeriod" resultType="oms.pc_protector.restApi.dashboard.model.DashboardPeriodVO">
        SELECT *
        FROM dashboard_period
        WHERE department_idx = #{departmentIdx};
    </select>

    <update id="dashboardPeriodUpdate" parameterType="oms.pc_protector.restApi.dashboard.model.DashboardPeriodVO">
        UPDATE dashboard_period
        SET start_date = #{startDate},
            end_date   = #{endDate}
        WHERE department_idx = #{departmentIdx}
    </update>

</mapper>