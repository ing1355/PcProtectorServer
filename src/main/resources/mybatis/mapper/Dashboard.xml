<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.dashboard.mapper.DashboardMapper">

    <select id="selectAvgScoreByMonth" resultType="Integer">

        SELECT NVL(AVG(u.score), 0)
        FROM user_result u,
             dashboard_period da,
             client c
        WHERE u.user_id = c.user_id
          AND (u.item1_result +
               u.item2_result +
               u.item3_result +
               u.item4_result +
               u.item5_result +
               u.item6_result +
               u.item7_result +
               u.item8_result +
               u.item9_result +
               u.item10_result +
               u.item11_result +
               u.item12_result +
               u.item13_result +
               u.item14_result +
               u.item15_result +
               u.item16_result) > 0
          AND DATE_FORMAT(u.check_time, '%Y-%m-%d %T') BETWEEN da.start_date AND da.end_date
        AND u.in_schedule = 1
    </select>

    <select id="selectClientCount" resultType="Integer">
        SELECT COUNT(*) FROM client;
    </select>

    <select id="selectAvgScoreByRecentMonths"
            resultType="Integer"
            parameterType="String">
        SELECT NVL(AVG(t2.score), 0)
        FROM (SELECT c.user_id, c.ip_address
              FROM user u,
                   client c
              WHERE u.user_id = c.user_id) AS t1
                 LEFT OUTER JOIN
             (SELECT *,
                     ROW_NUMBER() over (PARTITION BY user_id ORDER BY check_time DESC) AS r0
              FROM user_result
              WHERE DATE_FORMAT(check_time, '%Y-%m') = #{month}
                AND in_schedule = 1
                AND (item1_result +
                     item2_result +
                     item3_result +
                     item4_result +
                     item5_result +
                     item6_result +
                     item7_result +
                     item8_result +
                     item9_result +
                     item10_result +
                     item11_result +
                     item12_result +
                     item13_result +
                     item14_result +
                     item15_result +
                     item16_result) > 0) AS t2 ON t1.user_id = t2.user_id
        WHERE t2.r0 = 1
    </select>

    <!--    <select id="selectAvgScoreByRecent6Months"-->
    <!--            resultType="Integer">-->
    <!--        SELECT AVG(t1.score)                        AS avgScore,-->
    <!--               DATE_FORMAT(t1.create_time, '%Y-%m') AS yearMonth-->
    <!--        FROM user AS t0,-->
    <!--             user_result as t1-->
    <!--                 left outer join user_result as t2-->
    <!--                                 on t1.ip_address = t2.ip_address-->
    <!--                                     AND (t1.create_time <![CDATA[<]]> t2.create_time-->
    <!--                                         OR (t1.create_time = t2.create_time AND t1.ip_address <![CDATA[<]]> t2.ip_address))-->
    <!--        where t2.ip_address is NULL-->
    <!--          AND t0.user_id = t1.user_id-->
    <!--        GROUP BY yearMonth-->
    <!--        ORDER BY yearMonth DESC-->
    <!--        LIMIT 6-->
    <!--    </select>-->

    <select id="selectUserCountByScore" resultType="Integer">
        SELECT COUNT(*)
        FROM dashboard_period da, user_result t1, client c
        WHERE c.user_id = t1.user_id AND c.ip_address = t1.ip_address
          AND in_schedule = 1
          AND DATE_FORMAT(t1.check_time,'%Y-%m-%d %T') BETWEEN da.start_date AND da.end_date
          AND score BETWEEN #{startScore} AND #{endScore}
          AND (t1.item1_result +
               t1.item2_result +
               t1.item3_result +
               t1.item4_result +
               t1.item5_result +
               t1.item6_result +
               t1.item7_result +
               t1.item8_result +
               t1.item9_result +
               t1.item10_result +
               t1.item11_result +
               t1.item12_result +
               t1.item13_result +
               t1.item14_result +
               t1.item15_result +
               t1.item16_result) > 0
    </select>

    <select id="selectDashboardPeriod" resultType="oms.pc_protector.restApi.dashboard.model.DashboardPeriodVO">
        SELECT *
        FROM dashboard_period;
    </select>

    <update id="dashboardPeriodUpdate" parameterType="oms.pc_protector.restApi.dashboard.model.DashboardPeriodVO">
        UPDATE dashboard_period
        SET start_date = #{startDate},
            end_date   = #{endDate}
    </update>

</mapper>