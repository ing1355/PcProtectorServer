<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.department.mapper.DepartmentMapper">

    <select id="selectAll"
            resultType="oms.pc_protector.restApi.department.model.DepartmentVO">
        SELECT *
        FROM (SELECT b.idx, b.name, b.parent_code, b.dpt_code, b.code
        FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        ORDER BY d.code
    </select>

    <select id="findUserInDepartment" parameterType="String" resultType="Int">
        SELECT COUNT(user_id)
        FROM user u, (SELECT idx FROM department WHERE code LIKE CONCAT(#{code}, '%')) d
        WHERE u.department_idx = d.idx
    </select>

    <select id="findManagerInDepartment" parameterType="String" resultType="Int">
        SELECT COUNT(id)
        FROM manager m, (SELECT idx FROM department WHERE code LIKE CONCAT(#{code}, '%')) d
        WHERE m.department_idx = d.idx
    </select>

    <select id="findDepartmentCode" parameterType="String" resultType="Int">
        SELECT COUNT(code)
        FROM department
        WHERE code = #{value}
    </select>

    <select id="selectByDepartment"
            resultType="oms.pc_protector.restApi.department.model.DepartmentVO" parameterType="String">
        SELECT *
        FROM department
        WHERE name = #{value}
    </select>

    <select id="selectCodeByIdx"
            resultType="String" parameterType="String">
        SELECT code
        FROM department
        WHERE idx = #{departmentIdx}
    </select>

    <select id="selectIdxByCode">
        SELECT idx
        FROM department
        WHERE code = #{code}
    </select>

    <select id="selectBycode"
            resultType="oms.pc_protector.restApi.department.model.DepartmentVO" parameterType="Long">
        SELECT *
        FROM department
        WHERE code = #{departmentIdx}
    </select>

    <select id="selectByDptCode" parameterType="String"
            resultType="oms.pc_protector.restApi.department.model.DepartmentVO">
        SELECT * FROM department WHERE dpt_code = #{code}
    </select>

    <select id="selectChildCodeAscByParentCode" resultType="oms.pc_protector.restApi.department.model.DepartmentVO"
            parameterType="Long">
        SELECT code, name, parent_code
        FROM (
                 SELECT *
                 FROM department
                 ORDER BY parent_code, code) products_sorted,
             (
                 SELECT @pv := #{departmentIdx}) initialisation
        WHERE FIND_IN_SET(parent_code, @pv) > 0 AND @pv := CONCAT(@pv, ',', code)
    </select>

    <select id="selectChildCodeDescByParentCode" resultType="oms.pc_protector.restApi.department.model.DepartmentVO"
            parameterType="Long">
        SELECT code, name, parent_code
        FROM (
                 SELECT *
                 FROM department
                 ORDER BY parent_code, code) products_sorted,
             (
                 SELECT @pv := #{departmentIdx}) initialisation
        WHERE FIND_IN_SET(parent_code, @pv) > 0 AND @pv := CONCAT(@pv, ',', code)
        ORDER BY code desc;
    </select>

    <select id="selectByParentCode"
            resultType="Long" parameterType="Long">
        SELECT code
        FROM department
        WHERE parent_code = #{value}
    </select>

    <insert id="registerByExcel" parameterType="oms.pc_protector.restApi.department.model.DepartmentVO">
        INSERT INTO department (name, code, parent_code, dpt_code)
        VALUES (#{name}, #{code}, #{parentCode}, #{dptCode});
    </insert>

    <select id="insert" parameterType="oms.pc_protector.restApi.department.model.DepartmentVO"
            resultType="String">
        INSERT INTO department (name, code, parent_code, dpt_code)
        VALUES (#{name}, #{code}, #{parentCode}, #{dptCode});
        SELECT idx FROM department WHERE code = #{code};
    </select>

    <select id="insertRoot" parameterType="oms.pc_protector.restApi.department.model.DepartmentVO"
            resultType="String">
        INSERT INTO department (name, code, parent_code, dpt_code)
        VALUES (#{name}, #{code}, #{parentCode}, #{dptCode});
        INSERT INTO edit_program_check(department_idx)
        VALUES ((SELECT idx FROM department WHERE code = #{code}));
        INSERT INTO dashboard_period (start_date, end_date, department_idx)
        VALUES (DATE_FORMAT(NOW(), '%Y-%m-%d'),
                DATE_SUB(DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL 1 SECOND),
                (SELECT idx FROM department WHERE code = #{code}));
        INSERT INTO period_date_configuration (period,apply, department_idx)
        VALUES (3,1, (SELECT idx FROM department WHERE code = #{code}));
        INSERT INTO configuration (department_idx)
        VALUES ((SELECT idx FROM department WHERE code = #{code}));
        INSERT INTO next_period_date_configuration (start_date, end_date, department_idx)
        VALUES (
                   DATE_ADD(DATE_FORMAT(NOW(),'%Y-%m-%d'), INTERVAL 1 DAY),
                   DATE_SUB(DATE_ADD(DATE_FORMAT(NOW(),'%Y-%m-%d'), INTERVAL 2 DAY), INTERVAL 1 SECOND),
                   (SELECT idx FROM department WHERE code = #{code})
               );
        SELECT idx FROM department WHERE code = #{code};
    </select>

    <update id="changeDepartment" parameterType="oms.pc_protector.restApi.department.model.DepartmentVO">
        UPDATE department
        SET name        = #{name},
            code        = #{code},
            parent_code = #{parentCode},
            dpt_code    = #{dptCode},
            update_time = now()
        WHERE idx = #{idx}
    </update>

    <update id="update" parameterType="oms.pc_protector.restApi.department.model.UpdateDepartmentVO">
        UPDATE department
        SET name        = #{new_name},
            update_time = now()
        WHERE name = #{old_name} AND idx = #{idx}
    </update>

    <delete id="deleteAll">
        DELETE
        FROM department
        WHERE idx IN ((SELECT b.idx
                       FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')));
    </delete>

    <delete id="deleteRoot">
        DELETE
        FROM audit_log
        WHERE department_idx IN ((SELECT b.idx
                                  FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM client_history
        WHERE department_idx IN ((SELECT b.idx
                                FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM client
        WHERE department_idx IN ((SELECT b.idx
                                FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM client_file
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM configuration
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM dashboard_period
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM edit_program_check
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM next_period_date_configuration
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM period_date_configuration
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM process
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM security_usb_details
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM user
        WHERE department_idx IN ((SELECT b.idx
                                  FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM user_result
        WHERE department_idx IN ((SELECT b.idx
                                FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM unlicensed_program_list
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM un_approved_details
        WHERE department_idx = #{departmentIdx};
        DELETE
        FROM department
        WHERE idx IN ((SELECT b.idx
                     FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')));
    </delete>

    <delete id="delete">
        DELETE
        FROM department
        WHERE idx = #{departmentIdx};
    </delete>

</mapper>


