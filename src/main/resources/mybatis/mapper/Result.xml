<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.result.mapper.ResultMapper">

    <select id="selectResultAll" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO">
        SELECT *
        FROM user_result AS t1,
             user AS t2,
             client AS t3,
             (SELECT b.idx, b.name as department
              FROM department a
                       JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE t2.user_id = t3.user_id
          AND t1.user_id = t3.user_id
          AND t3.ip_address = t1.ip_address
          AND t2.department_idx = t3.department_idx
          AND t1.in_schedule = 1
          AND t2.department_idx = d.idx
        ORDER BY t1.check_time DESC
    </select>

    <select id="selectExistByDay" resultType="int">
        SELECT COUNT(ur.idx)
        FROM user_result ur,
             (SELECT b.idx
              FROM department a
                       JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE ur.in_schedule = 0
          AND DATE_FORMAT(ur.check_time, '%Y-%m-%d') = #{day}
          AND ur.department_idx = d.idx
    </select>

    <select id="selectCountRunByMonth" resultType="int">
        SELECT COUNT(DISTINCT u.idx)
        FROM user_result u,
             (SELECT * FROM dashboard_period WHERE department_idx = #{departmentIdx}) da,
             (SELECT DISTINCT c.ip_address, c.user_id, c.department_idx
              FROM client c,
                   user user,
                   (SELECT b.idx
                    FROM department a
                             JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
              WHERE user.user_id = c.user_id
                AND c.department_idx = d.idx) c
        WHERE u.user_id = c.user_id
          AND c.ip_address = u.ip_address
          AND (u.item1_result +
               u.item2_result +
               u.item3_result +
               u.item4_result +
               u.item5_result +
               u.item6_result +
               u.item7_result +
               u.item8_result +
               u.item9_result +
               u.item10_result +
               u.item11_result +
               u.item12_result +
               u.item13_result +
               u.item14_result +
               u.item15_result +
               u.item16_result) > 0
          AND DATE_FORMAT(u.check_time, '%Y-%m-%d %T') BETWEEN da.start_date AND da.end_date
          AND u.in_schedule = 1
          AND u.department_idx = c.department_idx
    </select>

    <select id="selectScoreByDepartmentWithMonth" resultType="Integer" parameterType="String">
        SELECT t1.score
        FROM (
                 SELECT A.department_idx, A.user_id, B.ip_address
                 FROM user as A,
                      client as B,
                      (SELECT b.idx
                       FROM department a
                                JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
                 WHERE A.user_id = B.user_id
                   AND B.department_idx = d.idx
                   AND A.department_idx = d.idx
             ) AS t0
                 LEFT OUTER JOIN
             (
                 SELECT ur.item1_result,
                        ur.item2_result,
                        ur.item3_result,
                        ur.item4_result,
                        ur.item5_result,
                        ur.item6_result,
                        ur.item7_result,
                        ur.item8_result,
                        ur.item9_result,
                        ur.item10_result,
                        ur.item11_result,
                        ur.item12_result,
                        ur.item13_result,
                        ur.item14_result,
                        ur.item15_result,
                        ur.item16_result,
                        ur.ip_address,
                        ur.user_id,
                        ur.score
                 FROM user_result ur,
                      (SELECT * FROM dashboard_period WHERE department_idx = #{UserIdx}) d
                 WHERE DATE_FORMAT(ur.check_time, '%Y-%m-%d %T') BETWEEN d.start_date AND d.end_date
                   AND in_schedule = 1
             ) AS t1 ON t0.user_id = t1.user_id AND t0.ip_address = t1.ip_address

        WHERE (t1.item1_result +
               t1.item2_result +
               t1.item3_result +
               t1.item4_result +
               t1.item5_result +
               t1.item6_result +
               t1.item7_result +
               t1.item8_result +
               t1.item9_result +
               t1.item10_result +
               t1.item11_result +
               t1.item12_result +
               t1.item13_result +
               t1.item14_result +
               t1.item15_result +
               t1.item16_result) > 0
    </select>

    <select id="selectBySearchInput" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO"
            parameterType="oms.pc_protector.restApi.result.model.SearchInputVO">
        SELECT * FROM (SELECT b.idx, b.name as department, b.code
        FROM department a JOIN department b ON a.idx = #{userIdx} AND b.code LIKE CONCAT(a.code, '%')) d,
        (SELECT t0.user_id, t0.name, t1.ip_address, t0.department_idx FROM user t0 , client t1
        WHERE t0.user_id = t1.user_id
        ) AS B LEFT OUTER JOIN user_result A ON A.user_id = B.user_id AND A.in_schedule = 1 AND A.ip_address =
        B.ip_address
        WHERE A.user_id = B.user_id
        AND B.department_idx = d.idx
        <if test="userId != null">
            AND A.user_id LIKE concat('%', #{userId}, '%')
        </if>
        <if test="name != null">
            AND B.name LIKE concat('%', #{name}, '%')
        </if>
        <if test="ipAddress != null">
            AND A.ip_address LIKE concat('%', #{ipAddress}, '%')
        </if>
        <if test="departmentIdx != null">
            AND B.department_idx = d.idx AND d.code LIKE CONCAT(#{departmentIdx}, '%')
        </if>
        <if test="startDate != null and endDate != null">
            And A.check_time BETWEEN #{startDate} AND #{endDate}
        </if>
        ORDER BY A.check_time DESC
    </select>

    <select id="findUserDetailStaticInfo" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO"
            parameterType="String">
        SELECT A.user_id,
               A.os,
               A.pc_protector_version,
               B.check_time,
               A.ip_address,
               B.score,
               B.item1_result,
               B.item2_result,
               B.item3_result,
               B.item4_result,
               B.item5_result,
               B.item6_result,
               B.item7_result,
               B.item8_result,
               B.item9_result,
               B.item10_result,
               B.item11_result,
               B.item12_result,
               B.item13_result,
               B.item14_result,
               B.item15_result,
               B.item16_result
        FROM (
            SELECT DISTINCT ch.ip_address,
                            ch.os,
                            ch.pc_protector_version,
                            ch.user_id
            FROM client_history ch,
                 user u,
                 (SELECT b.idx
                  FROM department a
                           JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
            WHERE ch.user_id = #{id}
              AND u.department_idx = d.idx
              AND u.department_idx = ch.department_idx
              AND ch.user_id = u.user_id
        ) AS A
           , (
            SELECT *
            FROM user_result
            WHERE user_id = #{id}
        ) AS B
        WHERE A.ip_address = B.ip_address
          AND B.in_schedule = 1
        ORDER BY B.check_time DESC
    </select>

    <select id="selectByScheduleIsExist" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM user_result ur,
             client c,
             dashboard_period dp,
             (SELECT b.idx
              FROM department a
                       JOIN department b ON a.idx = #{rootIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE DATE_FORMAT(ur.check_time, '%Y-%m-%d %T') BETWEEN dp.start_date AND dp.end_date
          AND dp.department_idx = #{rootIdx}
          AND ur.department_idx = d.idx
          AND ur.user_id = #{userId}
          AND ur.ip_address = c.ip_address
          AND ur.ip_address = #{ipAddress}
          AND ur.in_schedule = 1
    </select>

    <select id="selectClientForMiss" parameterType="oms.pc_protector.restApi.result.model.ResultVO"
            resultType="int">
        SELECT COUNT(idx)
        FROM user_result
        WHERE DATE_FORMAT(check_time, '%Y-%m-%d %T') BETWEEN #{checkTime} AND now()
          AND user_id = #{userId}
          AND ip_address = #{ipAddress}
          AND department_idx = #{departmentIdx}
          AND in_schedule = 1
    </select>

    <insert id="insertResult" parameterType="oms.pc_protector.restApi.result.model.ResultVO">
        INSERT INTO user_result (user_id,
                                 ip_address,
                                 check_time,
                                 score,
                                 item1_result, item2_result,
                                 item3_result, item4_result,
                                 item5_result, item6_result,
                                 item7_result, item8_result,
                                 item9_result, item10_result,
                                 item11_result, item12_result,
                                 item13_result, item14_result,
                                 item15_result, item16_result,
                                 item1_installation_status_check, item1_execution_status_check,
                                 item2_execution_status_check, item2_update_status_check,
                                 item3_count,
                                 item4_count,
                                 item5_reasons_vulnerability, item5_password_length, item5_detail_reasons,
                                 item6_pw_last_change_past_date,
                                 item7_execution_status_check, item7_pw_usage_status, item7_period,
                                 item10_count, in_schedule, department_idx)
        VALUES (#{userId},
                #{ipAddress},
                #{checkTime},
                #{score},
                #{item1Result}, #{item2Result},
                #{item3Result}, #{item4Result},
                #{item5Result}, #{item6Result},
                #{item7Result}, #{item8Result},
                #{item9Result}, #{item10Result},
                #{item11Result}, #{item12Result},
                #{item13Result}, #{item14Result},
                #{item15Result}, #{item16Result},
                #{item1InstallationStatusCheck}, #{item1ExecutionStatusCheck},
                #{item2ExecutionStatusCheck}, #{item2UpdateStatusCheck},
                #{item3Count},
                #{item4Count},
                #{item5ReasonsVulnerability}, #{item5PasswordLength}, #{item5DetailReasons},
                #{item6PwLastChangePastDate},
                #{item7ExecutionStatusCheck}, #{item7PwUsageStatus}, #{item7Period},
                #{item10Count}, #{inSchedule}, #{departmentIdx})
    </insert>

    <insert id="insertEmptyResultBySchedule" parameterType="oms.pc_protector.restApi.client.model.ClientVO">
        INSERT INTO user_result (user_id, ip_address, check_time, in_schedule, department_idx)
        VALUES (#{userId}, #{ipAddress}, #{checkTime}, 1, #{departmentIdx})
    </insert>

    <update id="updateResultClient" parameterType="oms.pc_protector.restApi.result.model.ResultVO">
        UPDATE user_result ur, dashboard_period dp, (SELECT b.idx
                                                     FROM department a
                                                              JOIN department b
                                                                   ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        SET score                           = #{score},
            check_time                      = #{checkTime},
            item1_result                    = #{item1Result},
            item2_result                    = #{item2Result},
            item3_result                    = #{item3Result},
            item4_result                    = #{item4Result},
            item5_result                    = #{item5Result},
            item6_result                    = #{item6Result},
            item7_result                    = #{item7Result},
            item8_result                    = #{item8Result},
            item9_result                    = #{item9Result},
            item10_result                   = #{item10Result},
            item11_result                   = #{item11Result},
            item12_result                   = #{item12Result},
            item13_result                   = #{item13Result},
            item14_result                   = #{item14Result},
            item15_result                   = #{item15Result},
            item16_result                   = #{item16Result},
            item1_execution_status_check    = #{item1ExecutionStatusCheck},
            item1_installation_status_check = #{item1InstallationStatusCheck},
            item2_execution_status_check    = #{item2ExecutionStatusCheck},
            item2_update_status_check       = #{item2UpdateStatusCheck},
            item3_count                     = #{item3Count},
            item4_count                     = #{item4Count},
            item5_reasons_vulnerability     = #{item5ReasonsVulnerability},
            item5_password_length           = #{item5PasswordLength},
            item5_detail_reasons            = #{item5DetailReasons},
            item6_pw_last_change_past_date  = #{item6PwLastChangePastDate},
            item7_execution_status_check    = #{item7ExecutionStatusCheck},
            item7_pw_usage_status           = #{item7PwUsageStatus},
            item7_period                    = #{item7Period},
            item10_count                    = #{item10Count}
        WHERE user_id = #{userId}
          AND ip_address = #{ipAddress}
          AND dp.department_idx = #{rootIdx}
          AND d.idx = ur.department_idx
          AND DATE_FORMAT(ur.check_time, '%Y-%m-%d %T') BETWEEN dp.start_date AND dp.end_date
          AND in_schedule = 1
    </update>

    <update id="updateResultClientNotInSchedule" parameterType="oms.pc_protector.restApi.result.model.ResultVO">
        UPDATE user_result
        SET score                           = #{score},
            check_time                      = #{checkTime},
            item1_result                    = #{item1Result},
            item2_result                    = #{item2Result},
            item3_result                    = #{item3Result},
            item4_result                    = #{item4Result},
            item5_result                    = #{item5Result},
            item6_result                    = #{item6Result},
            item7_result                    = #{item7Result},
            item8_result                    = #{item8Result},
            item9_result                    = #{item9Result},
            item10_result                   = #{item10Result},
            item11_result                   = #{item11Result},
            item12_result                   = #{item12Result},
            item13_result                   = #{item13Result},
            item14_result                   = #{item14Result},
            item15_result                   = #{item15Result},
            item16_result                   = #{item16Result},
            item1_execution_status_check    = #{item1ExecutionStatusCheck},
            item1_installation_status_check = #{item1InstallationStatusCheck},
            item2_execution_status_check    = #{item2ExecutionStatusCheck},
            item2_update_status_check       = #{item2UpdateStatusCheck},
            item3_count                     = #{item3Count},
            item4_count                     = #{item4Count},
            item5_reasons_vulnerability     = #{item5ReasonsVulnerability},
            item5_password_length= #{item5PasswordLength},
            item5_detail_reasons            = #{item5DetailReasons},
            item6_pw_last_change_past_date  = #{item6PwLastChangePastDate},
            item7_execution_status_check    = #{item7ExecutionStatusCheck},
            item7_pw_usage_status           = #{item7PwUsageStatus},
            item7_period                    = #{item7Period},
            item10_count                    = #{item10Count}
        WHERE user_id = #{userId}
          AND ip_address = #{ipAddress}
          AND DATE_FORMAT(check_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
          AND department_idx = #{departmentIdx}
          AND in_schedule = 0
    </update>
</mapper>


