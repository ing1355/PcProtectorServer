<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.result.mapper.ResultMapper">

    <select id="selectResultAll" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO">
        SELECT
            A.user_id,
            A.os,
            A.wrong_md5,
            A.pc_protector_version,
            A.department,
            B.check_time,
            A.ip_address,
            A.name,
            B.score,
            B.item1_result,
            B.item2_result,
            B.item3_result,
            B.item4_result,
            B.item5_result,
            B.item6_result,
            B.item7_result,
            B.item8_result,
            B.item9_result,
            B.item10_result,
            B.item11_result,
            B.item12_result,
            B.item13_result,
            B.item14_result,
            B.item15_result,
            B.item16_result
        FROM (
                SELECT DISTINCT t1.department, t1.user_id, t2.ip_address, t2.os, t2.wrong_md5, t2.pc_protector_version ,CONCAT(t1.name, ' ', '(', t2.pc_name, ')') AS name
                FROM USER AS t1 LEFT OUTER JOIN CLIENT AS t2 ON t1.user_id = t2.user_id
        ) AS A
        LEFT OUTER JOIN (
                SELECT t1.* FROM USER AS t0,user_result AS t1 LEFT OUTER JOIN user_result AS t2
                ON t1.ip_address = t2.ip_address AND (t1.create_time <![CDATA[<]]> t2.create_time OR (t1.create_time = t2.create_time AND t1.ip_address <![CDATA[<]]> t2.ip_address))
                WHERE t2.ip_address IS NULL AND t0.user_id = t1.user_id
        ) AS B
        ON A.ip_address = B.ip_address
    </select>

    <select id="selectCheckedResult" resultType="hashMap">
        SELECT
            user.user_Id,
            user.department,
            user.name,
            client.pc_name,
            client.os,
            client.ip_address,
            pc_protector_version,
            vaccine_version,
            client.check_time,
            item1_result, item2_result,
            item3_result, item4_result,
            item5_result, item6_result,
            item7_result, item8_result,
            item9_result, item10_result,
            item11_result, item12_result,
            item13_result, item14_result,
            item15_result, item16_result
        FROM user_result, client, user
        WHERE user_result.ip_address = client.ip_address
          AND client.user_id = user.user_id;
    </select>

    <select id="selectById" resultType="oms.pc_protector.restApi.result.model.ResultVO">
        select * from user_result WHERE user_id = #{value}
    </select>

    <select id="selectResultDetailsById" resultType="oms.pc_protector.restApi.result.model.ResultVO"
        parameterType="String">
        SELECT * FROM user_result
        WHERE ip_address = #{ipAddress} AND check_time BETWEEN #{startCheckTime} AND #{endCheckTime}
    </select>

    <select id="selectResultProcessById" resultType="oms.pc_protector.restApi.result.model.ResultProcessVO"
            parameterType="String">
        SELECT * FROM user_result_process
        WHERE ip_address = #{ipAddress} AND check_time BETWEEN #{startCheckTime} AND #{endCheckTime}
    </select>

    <select id="selectBySearchInput" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO"
            parameterType="oms.pc_protector.restApi.result.model.SearchInputVO">
        SELECT
            A.user_id,
            A.os,
            A.wrong_md5,
            A.pc_protector_version,
            A.department,
            B.check_time,
            A.ip_address,
            A.name,
            B.score,
            B.item1_result,
            B.item2_result,
            B.item3_result,
            B.item4_result,
            B.item5_result,
            B.item6_result,
            B.item7_result,
            B.item8_result,
            B.item9_result,
            B.item10_result,
            B.item11_result,
            B.item12_result,
            B.item13_result,
            B.item14_result,
            B.item15_result,
            B.item16_result
        FROM (
                SELECT DISTINCT t1.department, t1.user_id, t2.ip_address, t2.os, t2.wrong_md5, t2.pc_protector_version, CONCAT(t1.name, ' ', '(', t2.pc_name, ')') AS name
                FROM USER AS t1 LEFT OUTER JOIN CLIENT AS t2 ON t1.user_id = t2.user_id
        ) AS A
        LEFT OUTER JOIN (
                SELECT t1.* FROM USER AS t0,user_result AS t1 LEFT OUTER JOIN user_result AS t2
                ON t1.ip_address = t2.ip_address AND (t1.create_time <![CDATA[<]]> t2.create_time OR (t1.create_time = t2.create_time AND t1.ip_address <![CDATA[<]]> t2.ip_address))
                WHERE t2.ip_address IS NULL AND t0.user_id = t1.user_id
        ) AS B
        ON A.ip_address = B.ip_address
        where 1 = 1
        <if test="userId != null">
            AND A.user_id LIKE concat('%', #{userId}, '%')
        </if>
        <if test="name != null">
            AND A.name LIKE concat('%', #{name}, '%')
        </if>
        <if test="ipAddress != null">
            AND A.ip_address LIKE concat('%', #{ipAddress}, '%')
        </if>
        <if test="department != null">
            AND A.department = #{department}
        </if>
        <if test="startDate != null and endDate != null">
            And B.check_time BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <insert id="insertResult" parameterType="oms.pc_protector.restApi.result.model.ResultVO">
        INSERT INTO user_result (
                user_id,
                ip_address,
                check_time,
                score,

                item1_result, item2_result,
                item3_result, item4_result,
                item5_result, item6_result,
                item7_result, item8_result,
                item9_result, item10_result,
                item11_result, item12_result,
                item13_result, item14_result,
                item15_result, item16_result,

                item1_installation_status_check, item1_execution_status_check,
                item2_execution_status_check, item2_update_status_check,
                item3_count,
                item4_count,
                item5_reasons_vulnerability, item5_password_length, item5_detail_reasons,
                item6_pw_last_change_past_date,
                item7_execution_status_check, item7_pw_usage_status, item7_period,
                item10_count
            ) VALUES (
                #{userId},
                #{ipAddress},
                #{checkTime},
                #{score},

                #{item1Result}, #{item2Result},
                #{item3Result}, #{item4Result},
                #{item5Result}, #{item6Result},
                #{item7Result}, #{item8Result},
                #{item9Result}, #{item10Result},
                #{item11Result}, #{item12Result},
                #{item13Result}, #{item14Result},
                #{item15Result}, #{item16Result},

                #{item1InstallationStatusCheck}, #{item1ExecutionStatusCheck},
                #{item2ExecutionStatusCheck}, #{item2UpdateStatusCheck},
                #{item3Count},
                #{item4Count},
                #{item5ReasonsVulnerability}, #{item5PasswordLength}, #{item5DetailReasons},
                #{item6PwLastChangePastDate},
                #{item7ExecutionStatusCheck}, #{item7PwUsageStatus}, #{item7Period},
                #{item10Count}
            )
    </insert>

    <insert id="insertResultProcess" parameterType="oms.pc_protector.restApi.result.model.ResultProcessVO">
        INSERT INTO user_result_process (
            user_id,
            ip_address,
            process_name,
            type,
            check_time
            ) VALUES (
            #{userId},
            #{ipAddress},
            #{processName},
            #{type},
            #{checkTime}
            )
    </insert>

</mapper>


