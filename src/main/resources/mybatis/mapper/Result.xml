<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.result.mapper.ResultMapper">

    <select id="selectResultAll" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO">
        /* SELECT A.user_id,
               A.os,
               A.wrong_md5,
               A.pc_protector_version,
               A.department,
               B.check_time,
               A.ip_address,
               A.name,
               B.score,
               B.item1_result,
               B.item2_result,
               B.item3_result,
               B.item4_result,
               B.item5_result,
               B.item6_result,
               B.item7_result,
               B.item8_result,
               B.item9_result,
               B.item10_result,
               B.item11_result,
               B.item12_result,
               B.item13_result,
               B.item14_result,
               B.item15_result,
               B.item16_result
        FROM (
                 SELECT DISTINCT t1.department,
                                 t1.user_id,
                                 t1.name,
                                 t2.ip_address,
                                 t2.os,
                                 t2.wrong_md5,
                                 t2.pc_protector_version
                 FROM USER AS t1
                          LEFT OUTER JOIN CLIENT AS t2 ON t1.user_id = t2.user_id
             ) AS A
                 LEFT OUTER JOIN (
            SELECT t1.*
            FROM USER AS t0,
                 user_result AS t1
                     LEFT OUTER JOIN user_result AS t2
                                     ON t1.ip_address = t2.ip_address AND t1.user_id = t2.user_id AND (t1.create_time <![CDATA[<]]> t2.create_time OR
                                                                           (t1.create_time = t2.create_time AND t1.ip_address <![CDATA[<]]> t2.ip_address))
            WHERE t2.ip_address IS NULL
              AND t0.user_id = t1.user_id
        ) AS B ON A.ip_address = B.ip_address AND A.user_id = B.user_id */
        /* SELECT A.user_id,
               A.os,
               A.wrong_md5,
               A.pc_protector_version,
               A.department,
               B.check_time,
               A.ip_address,
               A.name,
               B.score,
               B.item1_result,
               B.item2_result,
               B.item3_result,
               B.item4_result,
               B.item5_result,
               B.item6_result,
               B.item7_result,
               B.item8_result,
               B.item9_result,
               B.item10_result,
               B.item11_result,
               B.item12_result,
               B.item13_result,
               B.item14_result,
               B.item15_result,
               B.item16_result,
               B.in_schedule
        FROM (
                 SELECT DISTINCT t1.department,
                                 t1.user_id,
                                 t1.name,
                                 t2.ip_address,
                                 t2.os,
                                 t2.wrong_md5,
                                 t2.pc_protector_version
                 FROM USER AS t1
                          LEFT OUTER JOIN CLIENT AS t2 ON t1.user_id = t2.user_id
             ) AS A
                 LEFT OUTER JOIN
             (
                 SELECT *
                 FROM user_result
             ) AS B
             ON A.ip_address = B.ip_address AND A.user_id = B.user_id
        WHERE in_schedule = 1
        ORDER BY B.check_time DESC */

        SELECT * FROM user_result AS t1, user AS t2, client AS t3
        WHERE t1.ip_address = t3.ip_address AND
              t2.user_id = t3.user_id AND t1.user_id = t3.user_id AND
              t1.in_schedule = 1
        ORDER BY t1.check_time DESC
    </select>

    <select id="selectResultDetailsById" resultType="oms.pc_protector.restApi.result.model.ResultVO"
            parameterType="String">
        SELECT *
        FROM user_result
        WHERE ip_address = #{ipAddress}
          AND check_time BETWEEN #{startCheckTime} AND #{endCheckTime}
    </select>

    <select id="selectResultProcessById" resultType="oms.pc_protector.restApi.result.model.ResultProcessVO"
            parameterType="String">
        SELECT *
        FROM user_result_process
        WHERE ip_address = #{ipAddress}
          AND check_time BETWEEN #{startCheckTime} AND #{endCheckTime}
    </select>

    <select id="selectCountBySchedule" resultType="int">
        SELECT COUNT(*) FROM user_result
        WHERE check_time BETWEEN #{startDate} AND #{endDate}
    </select>

    <select id="selectCountRunByMonth" resultType="int" parameterType="String">
        SELECT COUNT(*) FROM
            (
                SELECT user_id, ip_address FROM client
            ) AS t0 LEFT OUTER JOIN
            (SELECT *,
                    ROW_NUMBER() over (PARTITION BY user_id, ip_address ORDER BY check_time DESC) AS r0
             FROM user_result) AS t1 ON t0.user_id = t1.user_id AND t0.ip_address = t1.ip_address
        WHERE t1.r0 = 1 AND t1.in_schedule = 1
          AND (t1.item1_result != 0
            OR t1.item2_result != 0
            OR t1.item3_result != 0
            OR t1.item4_result != 0
            OR t1.item5_result != 0
            OR t1.item6_result != 0
            OR t1.item7_result != 0
            OR t1.item8_result != 0
            OR t1.item9_result != 0
            OR t1.item10_result != 0
            OR t1.item11_result != 0
            OR t1.item12_result != 0
            OR t1.item13_result != 0
            OR t1.item14_result != 0
            OR t1.item15_result != 0
            OR t1.item16_result != 0)
    </select>

    <select id="selectScoreByDepartmentWithMonth" resultType="Integer" parameterType="String">

        SELECT t1.score FROM (
                                 SELECT A.department_idx, A.user_id, B.ip_address
                                 FROM user as A, client as B
                                 WHERE A.user_id = B.user_id AND A.department = #{department}
                             ) AS t0 LEFT OUTER JOIN
                             (
                                 SELECt * FROM user_result
                                 WHERE check_time BETWEEN #{startDate} AND #{endDate}
                             ) AS t1 ON t0.user_id = t1.user_id AND t0.ip_address = t1.ip_address

        WHERE in_schedule = 1
          AND (t1.item1_result != 0
            OR t1.item2_result != 0
            OR t1.item3_result != 0
            OR t1.item4_result != 0
            OR t1.item5_result != 0
            OR t1.item6_result != 0
            OR t1.item7_result != 0
            OR t1.item8_result != 0
            OR t1.item9_result != 0
            OR t1.item10_result != 0
            OR t1.item11_result != 0
            OR t1.item12_result != 0
            OR t1.item13_result != 0
            OR t1.item14_result != 0
            OR t1.item15_result != 0
            OR t1.item16_result != 0)
    </select>

    <select id="selectBySearchInput" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO"
            parameterType="oms.pc_protector.restApi.result.model.SearchInputVO">
        /* SELECT
        A.user_id,
        A.os,
        A.wrong_md5,
        A.pc_protector_version,
        A.department,
        A.department_idx,
        A.name,
        B.check_time,
        A.ip_address,
        B.score,
        B.item1_result,
        B.item2_result,
        B.item3_result,
        B.item4_result,
        B.item5_result,
        B.item6_result,
        B.item7_result,
        B.item8_result,
        B.item9_result,
        B.item10_result,
        B.item11_result,
        B.item12_result,
        B.item13_result,
        B.item14_result,
        B.item15_result,
        B.item16_result
        FROM (
        SELECT DISTINCT t1.department, t1.department_idx, t1.user_id, t1.name, t2.ip_address, t2.os, t2.wrong_md5,
        t2.pc_protector_version
        FROM USER AS t1 LEFT OUTER JOIN CLIENT AS t2 ON t1.user_id = t2.user_id
        ) AS A
        LEFT OUTER JOIN
        (
        SELECT *, MAX(create_time) FROM user_result GROUP BY ip_address, user_id, check_time
        ) AS B
        ON A.ip_address = B.ip_address AND A.user_id = B.user_id */

        SELECT * FROM user_result AS C, user AS A, client AS B
        WHERE C.ip_address = B.ip_address AND
        A.user_id = B.user_id AND C.user_id = B.user_id AND
        C.in_schedule = 1
        <if test="userId != null">
            AND A.user_id LIKE concat('%', #{userId}, '%')
        </if>
        <if test="name != null">
            AND A.name LIKE concat('%', #{name}, '%')
        </if>
        <if test="ipAddress != null">
            AND B.ip_address LIKE concat('%', #{ipAddress}, '%')
        </if>
        <if test="departmentCode != null">
            AND A.department_idx = #{departmentCode}
        </if>
        <if test="startDate != null and endDate != null">
            And C.check_time BETWEEN #{startDate} AND #{endDate}
        </if>
        ORDER BY C.check_time DESC
    </select>

    <select id="findUserDetailStaticInfo" resultType="oms.pc_protector.restApi.result.model.ResponseResultVO"
            parameterType="String">
        SELECT A.user_id,
               A.os,
               A.wrong_md5,
               A.pc_protector_version,
               A.department,
               A.department_idx,
               A.name,
               B.check_time,
               A.ip_address,
               B.score,
               B.item1_result,
               B.item2_result,
               B.item3_result,
               B.item4_result,
               B.item5_result,
               B.item6_result,
               B.item7_result,
               B.item8_result,
               B.item9_result,
               B.item10_result,
               B.item11_result,
               B.item12_result,
               B.item13_result,
               B.item14_result,
               B.item15_result,
               B.item16_result
        FROM (
                 SELECT DISTINCT t1.department,
                                 t1.department_idx,
                                 t1.user_id,
                                 t1.name,
                                 t2.ip_address,
                                 t2.os,
                                 t2.wrong_md5,
                                 t2.pc_protector_version
                 FROM USER AS t1
                          LEFT OUTER JOIN CLIENT AS t2 ON t1.user_id = t2.user_id
             ) AS A
                 LEFT OUTER JOIN (
            SELECT *, MAX(create_time) FROM user_result GROUP BY ip_address, user_id, check_time
        ) AS B
                                 ON A.ip_address = B.ip_address AND A.user_id = B.user_id
        WHERE A.user_id = #{value}
        ORDER BY B.check_time DESC
    </select>

    <select id="selectByScheduleIsExist" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM user_result
        WHERE check_time BETWEEN #{startChecktime}
            AND #{endChecktime}
          AND user_id = #{userId}
          AND ip_address = #{ipAddress}
    </select>

    <select id="selectClientForMiss" parameterType="oms.pc_protector.restApi.result.model.ResultVO"
            resultType="int">
        SELECT COUNT(*)
        FROM user_result
        WHERE check_time BETWEEN #{checkTime} AND now()
          AND user_id = #{userId}
          AND ip_address = #{ipAddress}
    </select>

    <insert id="insertResult" parameterType="oms.pc_protector.restApi.result.model.ResultVO">
        INSERT INTO user_result (user_id,
                                 ip_address,
                                 check_time,
                                 score,
                                 item1_result, item2_result,
                                 item3_result, item4_result,
                                 item5_result, item6_result,
                                 item7_result, item8_result,
                                 item9_result, item10_result,
                                 item11_result, item12_result,
                                 item13_result, item14_result,
                                 item15_result, item16_result,
                                 item1_installation_status_check, item1_execution_status_check,
                                 item2_execution_status_check, item2_update_status_check,
                                 item3_count,
                                 item4_count,
                                 item5_reasons_vulnerability, item5_password_length, item5_detail_reasons,
                                 item6_pw_last_change_past_date,
                                 item7_execution_status_check, item7_pw_usage_status, item7_period,
                                 item10_count, in_schedule)
        VALUES (#{userId},
                #{ipAddress},
                #{checkTime},
                #{score},
                #{item1Result}, #{item2Result},
                #{item3Result}, #{item4Result},
                #{item5Result}, #{item6Result},
                #{item7Result}, #{item8Result},
                #{item9Result}, #{item10Result},
                #{item11Result}, #{item12Result},
                #{item13Result}, #{item14Result},
                #{item15Result}, #{item16Result},
                #{item1InstallationStatusCheck}, #{item1ExecutionStatusCheck},
                #{item2ExecutionStatusCheck}, #{item2UpdateStatusCheck},
                #{item3Count},
                #{item4Count},
                #{item5ReasonsVulnerability}, #{item5PasswordLength}, #{item5DetailReasons},
                #{item6PwLastChangePastDate},
                #{item7ExecutionStatusCheck}, #{item7PwUsageStatus}, #{item7Period},
                #{item10Count}, #{inSchedule})
    </insert>

    <insert id="insertResultProcess" parameterType="oms.pc_protector.restApi.result.model.ResultProcessVO">
        INSERT INTO user_result_process (user_id,
                                         ip_address,
                                         process_name,
                                         type,
                                         check_time)
        VALUES (#{userId},
                #{ipAddress},
                #{processName},
                #{type},
                #{checkTime})
    </insert>

    <insert id="insertEmptyResultBySchedule" parameterType="oms.pc_protector.restApi.client.model.ClientVO">
        INSERT INTO user_result (user_id, ip_address, check_time, in_schedule)
        VALUES (#{userId}, #{ipAddress}, #{checkTime}, 1)
    </insert>

    <update id="updateResultClient" parameterType="oms.pc_protector.restApi.result.model.ResultVO">
        UPDATE user_result
        SET score                           = #{score},
            check_time                      = #{checkTime},
            item1_result                    = #{item1Result},
            item2_result                    = #{item2Result},
            item3_result                    = #{item3Result},
            item4_result                    = #{item4Result},
            item5_result                    = #{item5Result},
            item6_result                    = #{item6Result},
            item7_result                    = #{item7Result},
            item8_result                    = #{item8Result},
            item9_result                    = #{item9Result},
            item10_result                   = #{item10Result},
            item11_result                   = #{item11Result},
            item12_result                   = #{item12Result},
            item13_result                   = #{item13Result},
            item14_result                   = #{item14Result},
            item15_result                   = #{item15Result},
            item16_result                   = #{item16Result},
            item1_execution_status_check    = #{item1ExecutionStatusCheck},
            item1_installation_status_check = #{item1InstallationStatusCheck},
            item2_execution_status_check    = #{item2ExecutionStatusCheck},
            item2_update_status_check       = #{item2UpdateStatusCheck},
            item3_count                     = #{item3Count},
            item4_count                     = #{item4Count},
            item5_reasons_vulnerability     = #{item5ReasonsVulnerability},
            item5_password_length= #{item5PasswordLength},
            item5_detail_reasons            = #{item5DetailReasons},
            item6_pw_last_change_past_date  = #{item6PwLastChangePastDate},
            item7_execution_status_check    = #{item7ExecutionStatusCheck},
            item7_pw_usage_status           = #{item7PwUsageStatus},
            item7_period                    = #{item7Period},
            item10_count                    = #{item10Count}
        WHERE user_id = #{userId}
          AND ip_address = #{ipAddress}
          AND check_time BETWEEN #{startTime} AND
            #{endTime}
    </update>
</mapper>


