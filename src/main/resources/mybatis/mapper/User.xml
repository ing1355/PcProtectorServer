<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pc_protector.restApi.user.mapper.UserMapper">

    <select id="selectUserInfoAll" resultType="oms.pc_protector.restApi.user.model.UserVO">
        SELECT u.user_id,
               u.department_idx,
               u.name,
               IFNULL(GROUP_CONCAT(ip_address SEPARATOR ' / '), "") AS ip_address,
               u.email,
               d.name as department,
               u.phone
        FROM (SELECT b.idx, b.name
              FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d,
             user AS u
                 LEFT join client AS c
                           ON u.user_id = c.user_id
        WHERE u.department_idx = d.idx
        GROUP BY u.user_id
    </select>

    <select id="selectById" resultType="oms.pc_protector.restApi.user.model.UserVO"
            parameterType="String">
        SELECT *
        FROM user u, (SELECT code FROM department WHERE dpt_code = #{code}) d
        WHERE user_id = #{id} AND u.department_idx LIKE CONCAT(d.code, '%')
    </select>

    <select id="selectSameId" resultType="int" parameterType="String">
        SELECT COUNT(u.user_id)
        FROM user u, (SELECT b.idx
                    FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE u.user_id = #{id} AND u.department_idx = d.idx;
    </select>

    <select id="search" parameterType="oms.pc_protector.restApi.user.model.UserSearchInputVO"
            resultType="oms.pc_protector.restApi.user.model.UserVO">
        SELECT u.idx, u.user_id, u.name, u.department_idx, u.email, u.phone, d.name as department FROM user u, (SELECT b.idx, b.name
        FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE u.department_idx = d.idx
        <if test='userId != null and userId != ""'>
            AND u.user_id LIKE CONCAT('%',#{userId},'%')
        </if>
        <if test='name != null and name != ""'>
            AND u.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='departmentIdx != null and departmentIdx != ""'>
            AND u.department_idx IN ((SELECT b.idx
            FROM department a JOIN department b ON a.idx = #{departmentIdx} AND b.code LIKE CONCAT(a.code, '%')))
        </if>
        <if test='phone != null and phone != ""'>
            AND u.phone LIKE CONCAT('%',#{phone},'%')
        </if>
    </select>

    <insert id="insertUserInfo" parameterType="String">
        INSERT INTO user (
            user_id
        )
        VALUES (
                   #{userId}
               )
    </insert>

    <insert id="insertUserInfoUserInfoFromAdmin" parameterType="oms.pc_protector.restApi.user.model.UserRequestVO">
        INSERT INTO user (user_id,
                          name,
                          email,
                          phone,
                          department_idx)
        VALUES (#{userId},
                #{name},
                #{email},
                #{phone},
                #{departmentIdx})
    </insert>

    <insert id="RegisterUserInfo" parameterType="oms.pc_protector.restApi.user.model.UserVO">
        INSERT INTO user (user_id,
                          name,
                          email,
                          phone,
                          department_idx)
        VALUES (#{userId},
                #{name},
                #{email},
                #{phone},
                (SELECT idx FROM department WHERE code = #{departmentIdx}))
    </insert>

    <update id="updateUserInfo_Front" parameterType="oms.pc_protector.restApi.user.model.RequestUserVO">
        <if test='change != null'>
            UPDATE client c
            SET department_idx = #{departmentIdx}
            WHERE c.user_id = #{userId} AND c.department_idx = #{change};
            UPDATE client_history c
            SET department_idx = #{departmentIdx}
            WHERE c.user_id = #{userId} AND c.department_idx = #{change};
            UPDATE user_result ur
            SET department_idx = #{departmentIdx}
            WHERE ur.user_id = #{userId} AND ur.department_idx = #{change};
        </if>
        UPDATE user user, (SELECT b.idx
                           FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        SET user.name           = #{name},
            user.department_idx = #{departmentIdx},
            user.email          = #{email},
            user.phone          = #{phone},
            user.update_time    = now()
        WHERE user.user_id = #{userId} AND user.department_idx = d.idx;
    </update>

    <delete id="deleteUserInfo" parameterType="String">
        DELETE ch
        FROM client_history ch, user u, (SELECT b.idx
                                         FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE ch.user_id = #{id} AND ch.user_id = u.user_id AND u.department_idx = d.idx;
        DELETE ur
        FROM user_result ur, user u, (SELECT b.idx
                                      FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE ur.user_id = #{id} AND ur.user_id = u.user_id AND u.department_idx = d.idx;
        DELETE c
        FROM client c, user u, (SELECT b.idx
                                FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE c.user_id = #{id} AND c.user_id = u.user_id AND u.department_idx = d.idx;
        DELETE u
        FROM user u, (SELECT b.idx
                      FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')) d
        WHERE u.user_id = #{id} AND u.department_idx = d.idx;
    </delete>

    <delete id="deleteAllUserInfo">
        DELETE
        FROM user
        WHERE department_idx IN ((SELECT b.idx
                                  FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM user_result
        WHERE department_idx IN ((SELECT b.idx
                                  FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM client
        WHERE department_idx IN ((SELECT b.idx
                                  FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')));
        DELETE
        FROM client_history
        WHERE department_idx IN ((SELECT b.idx
                                  FROM department a JOIN department b ON a.idx = #{UserIdx} AND b.code LIKE CONCAT(a.code, '%')));
    </delete>

</mapper>


